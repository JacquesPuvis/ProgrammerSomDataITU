EXERCISE 7.1: 

A: 
> fromFile "ex1.c";;
val ast: Absyn.program =
  Prog
    [Fundec                                                                         DECLARATION
       (None, "main", [(TypI, "n")],                                                FUNCTION WITH NAME "MAIN", RETURNS NONE AND TAKES PARAMETER n OF TypI
        Block                                                                       FUNCTION BODY
          [Stmt 
             (While                                                                 STATEMENT (WHILE LOOP)
                (Prim2 (">", Access (AccVar "n"), CstI 0),                          EXPRESSION (n > 0)
                 Block                                                              
                   [Stmt (Expr (Prim1 ("printi", Access (AccVar "n"))));            EXPRESSION WRAPPED IN STATEMENT
                    Stmt                                                            STATEMENT
                      (Expr                                                         EXPRESSION
                         (Assign                                                    EXPRESSION
                            (AccVar "n",                                            
                             Prim2 ("-", Access (AccVar "n"), CstI 1))))]));
           Stmt (Expr (Prim1 ("printc", CstI 10)))])]                               EXPRESSION WRAPPED IN STATEMENT


> run (fromFile "ex1.c") [17];;
17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 
val it: Interp.store = map [(0, 0)]

> run (fromFile "ex5.c") [4];;
16 4 val it: Interp.store = map [(0, 4); (1, 4); (2, 16); (3, 4); (4, 2)]

> run (fromFile "ex11.c") [8];;
1 5 8 6 3 7 2 4 
1 6 8 3 7 4 2 5 
1 7 4 6 8 2 5 3 
1 7 5 8 2 4 6 3 
2 4 6 8 3 1 7 5 
2 5 7 1 3 8 6 4 
2 5 7 4 1 8 6 3 
2 6 1 7 4 8 3 5 
2 6 8 3 1 4 7 5 
2 7 3 6 8 5 1 4 
2 7 5 8 1 4 6 3 
2 8 6 1 3 5 7 4 
3 1 7 5 8 2 4 6 
3 5 2 8 1 7 4 6 
3 5 2 8 6 4 7 1 
3 5 7 1 4 2 8 6 
3 5 8 4 1 7 2 6 
3 6 2 5 8 1 7 4 
3 6 2 7 1 4 8 5 
3 6 2 7 5 1 8 4 
3 6 4 1 8 5 7 2 
3 6 4 2 8 5 7 1 
3 6 8 1 4 7 5 2 
3 6 8 1 5 7 2 4 
3 6 8 2 4 1 7 5 
3 7 2 8 5 1 4 6 
3 7 2 8 6 4 1 5 
3 8 4 7 1 6 2 5 
4 1 5 8 2 7 3 6 
4 1 5 8 6 3 7 2 
4 2 5 8 6 1 3 7 
4 2 7 3 6 8 1 5 
4 2 7 3 6 8 5 1 
4 2 7 5 1 8 6 3 
4 2 8 5 7 1 3 6 
4 2 8 6 1 3 5 7 
4 6 1 5 2 8 3 7 
4 6 8 2 7 1 3 5 
4 6 8 3 1 7 5 2 
4 7 1 8 5 2 6 3 
4 7 3 8 2 5 1 6 
4 7 5 2 6 1 3 8 
4 7 5 3 1 6 8 2 
4 8 1 3 6 2 7 5 
4 8 1 5 7 2 6 3 
4 8 5 3 1 7 2 6 
5 1 4 6 8 2 7 3 
5 1 8 4 2 7 3 6 
5 1 8 6 3 7 2 4 
5 2 4 6 8 3 1 7 
5 2 4 7 3 8 6 1 
5 2 6 1 7 4 8 3 
5 2 8 1 4 7 3 6 
5 3 1 6 8 2 4 7 
5 3 1 7 2 8 6 4 
5 3 8 4 7 1 6 2 
5 7 1 3 8 6 4 2 
5 7 1 4 2 8 6 3 
5 7 2 4 8 1 3 6 
5 7 2 6 3 1 4 8 
5 7 2 6 3 1 8 4 
5 7 4 1 3 8 6 2 
5 8 4 1 3 6 2 7 
5 8 4 1 7 2 6 3 
6 1 5 2 8 3 7 4 
6 2 7 1 3 5 8 4 
6 2 7 1 4 8 5 3 
6 3 1 7 5 8 2 4 
6 3 1 8 4 2 7 5 
6 3 1 8 5 2 4 7 
6 3 5 7 1 4 2 8 
6 3 5 8 1 4 2 7 
6 3 7 2 4 8 1 5 
6 3 7 2 8 5 1 4 
6 3 7 4 1 8 2 5 
6 4 1 5 8 2 7 3 
6 4 2 8 5 7 1 3 
6 4 7 1 3 5 2 8 
6 4 7 1 8 2 5 3 
6 8 2 4 1 7 5 3 
7 1 3 8 6 4 2 5 
7 2 4 1 8 5 3 6 
7 2 6 3 1 4 8 5 
7 3 1 6 8 5 2 4 
7 3 8 2 5 1 6 4 
7 4 2 5 8 1 3 6 
7 4 2 8 6 1 3 5 
7 5 3 1 6 8 2 4 
8 2 4 1 7 5 3 6 
8 2 5 3 1 7 4 6 
8 3 1 6 2 5 7 4 
8 4 1 3 6 2 7 5 
val it: Interp.store =
  map
    [(0, 8); (1, 0); (2, 9); (3, -999); (4, 0); (5, 0); (6, 0); (7, 0); (8, 0);
     ...]

___________________________________________________________________________________________

EXERCISE 7.2:
(i)
void arrsum(int n, int arr[], int *sump) {
  int i;
  int s;
  i = 0;
  s = 0;
  while (i < n) {
    s = s + arr[i];
    i = i + 1;
    }
    *sump = s;
}

void main() {
  int a[4];
  int s;
  a[0] = 7;
  a[1] = 13;
  a[2] = 9;
  a[3] = 8;
  arrsum(4, a, &s);
  print s;
  println;
}

> run (fromFile "ex7.2.c") [];;
37 
val it: Interp.store =
  map
    [(0, 7); (1, 13); (2, 9); (3, 8); (4, 0); (5, 37); (6, 4); (7, 0); (8, 5);
     ...]

(ii)
void squares(int n, int arr[]) {
    int i;
    i = 0;

    while (i < n) {
        arr[i] = i * i;
        i = i + 1;
    }
}

void main(int n) {
    int a[20];
    int s;
    if (n > 20) {
        print 0; //indicates error 
    } else {
        squares(n, a);
        arrsum(n, a, &s);
        print s; 
        println;
    }
} 

> run (fromFile "ex7.2.c") [20];;
2470 
val it: Interp.store =
  map
    [(0, 20); (1, 0); (2, 1); (3, 4); (4, 9); (5, 16); (6, 25); (7, 36);
     (8, 49); ...]


(ii)
void histogram(int n, int ns[], int max, int freq[]) {
    int i;
    i = 0;
    while (i < n) {
        if (ns[i] <= max) {
            freq[ns[i]] = freq[ns[i]] + 1;
        }
        i = i + 1;
    }
}

void main() {
    int arr[7];
    int f[4];
    f[0] = 0; f[1] = 0; f[2] = 0; f[3] = 0;
    arr[0] = 1; arr[1] = 2; arr[2] = 1; arr[3] = 1; arr[4] = 1;
    arr[5] = 2; arr[6] = 0;
    histogram(7, arr, 3, f);
    print f[0]; print f[1]; print f[2]; print f[3]; 
    println;
}

> run (fromFile "ex7.2.c") [];;
1 4 2 0 
val it: Interp.store =
  map
    [(0, 1); (1, 2); (2, 1); (3, 1); (4, 1); (5, 2); (6, 0); (7, 0); (8, 1);
     ...]

___________________________________________________________________________________________

EXERCISE 7.3

We didn't get to finish the other exercises :)